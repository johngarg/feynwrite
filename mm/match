#!/usr/bin/env python3

import os
import sys
from matchmakereft.libs.mm_offline import create_model, match_model_to_eft
from rich import print

particle_names = sys.argv[1:]
model_name = "_".join(particle_names)
particles = " ".join(particle_names)


def run_and_print(cmd):
    print("$ " + cmd)
    os.system(cmd)


# Run feynwrite
run_and_print(f"feynwrite {particles} > {model_name}.fr")

# Copy generic .symm and .gauge files
run_and_print(f"cp granada.symm {model_name}.symm")
run_and_print(f"cp granada.gauge {model_name}.gauge")
run_and_print(f"cp granada.red {model_name}.red")

# Run Matchmaker
create_model(f"UnbrokenSM_BFM.fr {model_name}.fr")
match_model_to_eft(f"{model_name}_MM SMEFT_Green_Bpreserving_MM")

# Check output
with open(f"{model_name}_MM/MatchingProblems.dat", "r") as problems_file:
    problems_text = problems_file.read()
    if problems_text.strip() == "problist = {}":
        print("\n[green]Matching performed without problems![/green] :thumbsup:")
    elif "ee" in problems_text:
        print(
            f"[yellow]Matchmaker reported problems with the matching, but this may be due to gamma_5.[/yellow] :thumbsdown:"
        )
    else:
        print(
            f"[red]Matchmaker reported problems with the matching.[/red] :thumbsdown:"
        )

with open(f"{model_name}_MM/MatchingResult.dat", "r") as results_file:
    results_text = results_file.read()
    if model_name in results_text.strip():
        print(
            f"[green]{model_name} features in the matching results.[/green] :thumbsup:"
        )
    else:
        print(
            f"[red]{model_name} does not feature in the matching results.[/red] :thumbsdown:"
        )
